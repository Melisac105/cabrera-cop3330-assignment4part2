@startuml
'https://plantuml.com/sequence-diagram

class ToDoListApp {
    + main()
    + start()
    + stop()
}

class MainWindowControllers {
    - myList: ToDoList

    tableView: TableView<Item> <<FXML>>
    taskName: TableColumn<Item, String> <<FXML>>
    desc: TableColumn<Item, String> <<FXML>>
    dueDate: TableColumn<Item, String> <<FXML>>
    complete: TableColumn<Item, String> <<FXML>>

    capacityText: Label <<FXML>>

    showAll: MenuItem <<FXML>>
    showComplete: MenuItem <<FXML>>
    showIncomplete: MenuItem <<FXML>>

    addButton: ImageView <<FXML>>
    minusButton: ImageView <<FXML>>
    fileUpload: ImageView <<FXML>>
    fileDownload: ImageView <<FXML>>

    + displayAllItems()
    + displayIncompleteItems()
    + displayCompleteItems()
    + clearAll()
    + initialize()
    + getTasks()
}

class AddTaskWindowControllers {
    datePicker: DatePicker <<FXML>>
    taskName: TextField <<FXML>>
    desc: TextArea <<FXML>>
    submit: Button <<FXML>>

    + submitTask()
    + initialize()
}

class Item {
    - description : String
    - dueDate : String
    - complete : String
    name: String

    + Item()
    + getDescription()
    + setDescription()
    + getDueDate()
    + setDueDate()
    + isComplete()
    + setComplete()
    + getName()
    + setName()
    + toString()
}

class ToDoList {
    - title : String
    - capacity : int
    + count : int
    + items : ArrayList<Item>

    + ToDoList()
    + getTitle()
    + getRemainingCapacity()
    + setTitle()
    + setCapacity()
    + editTitle()
    + addItem()
    + removeItem()
    + updateName()
    + editDescription()
    + editDueDate()
    + markAnItemComplete()
    + getItems()
    + getCompleteItems()
    + getIncompleteItems()
    + clearAll()
}

javafx.Application <|-- ToDoListApp

ToDoListApp <- MainWindowControllers
ToDoListApp --> Item
AddTaskWindowControllers --> Item
AddTaskWindowControllers --> MainWindowControllers
MainWindowControllers --> Item
MainWindowControllers -> ToDoList
ToDoList --> Item

@enduml